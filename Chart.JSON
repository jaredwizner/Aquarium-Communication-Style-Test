{
  "radar_chart_instructions": {
    "description": "The radar chart visually represents the participant's communication style scores across four dimensions: Visionary (Why?), People-Oriented (Who?), Planning (How?), and Doing (What?). The chart provides an insightful representation of the participant's dominant, secondary, and blended communication traits.",
    "chart_elements": {
      "axes": [
        {
          "label": "Visionary (Why?)",
          "color": "yellow"
        },
        {
          "label": "Planning (How?)",
          "color": "blue"
        },
        {
          "label": "People-Oriented (Who?)",
          "color": "green"
        },
        {
          "label": "Doing (What?)",
          "color": "red"
        }
      ],
      "fill_color": "blue",
      "fill_alpha": 0.4,
      "line_color": "blue",
      "line_width": 2,
      "title": "Aquarium Communication Style Test Result",
      "title_size": 16,
      "title_weight": "bold",
      "title_pad": 50,
      "background_labels": {
        "enabled": true,
        "background_color": "white",
        "text_size": 12,
        "text_weight": "bold",
        "text_padding": 2
      },
      "hide_radial_labels": true,
      "remove_degrees": true
    },
    "chart_generation": {
      "algorithm": "The GPT should calculate scores for each communication style based on the participant's responses and use these values to generate a radar chart by calling the external Python script 'aquarium_communication_style_chart.py'. The script will dynamically generate the chart based on provided scores.",
      "xy_axes_logic": {
        "x_axis": "Visionary vs. Planning",
        "y_axis": "Doing vs. People-Oriented"
      },
      "script_execution": {
        "script_name": "aquarium_communication_style_chart.py",
        "parameters": {
          "scores": "The scores for each communication style (Visionary, Planning, People-Oriented, Doing) should be passed to the script as input parameters."
        },
        "execution_notes": "Ensure that the Python environment is properly set up with necessary libraries such as 'matplotlib' and 'numpy'. The script will generate a radar chart and save it as an image file to be included in the test results."
      },
      "score_interpretation": "Based on the participant's scores, the chart should highlight dominant styles using the corresponding colors for each axis. When a participant demonstrates a balanced blend, the visual shape will show relatively equal spread across all axes. If they show higher scores in particular styles, these areas will appear more pronounced on the radar chart."
    },
    "chart_output": {
      "format": "The radar chart should be dynamically generated as an image by the script and presented alongside the participant's results. It will serve as a graphical representation of the communication style scores.",
      "presentation": "Include the radar chart in the test results summary, using the predefined styles and chart elements. Make sure the visual is clear and easy to interpret, providing insights that reinforce the textual analysis provided in the summary."
    }
  }
}

